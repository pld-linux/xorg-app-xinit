diff --git a/configure.ac b/configure.ac
index 1aee1d2..5775db3 100644
--- a/configure.ac
+++ b/configure.ac
@@ -47,6 +47,7 @@ DEFAULT_XMODMAP=xmodmap
 DEFAULT_TWM=twm
 DEFAULT_XCLOCK=xclock
 DEFAULT_XTERM=xterm
+DEFAULT_CK=yes
 # You always want to specify the full path to the X server
 DEFAULT_XSERVER=${bindir}/X
 DEFAULT_XAUTH=xauth
@@ -104,6 +105,22 @@ esac
 AC_SUBST(XINIT_CFLAGS)
 AC_SUBST(XINIT_LIBS)
 
+# Check for ConsoleKit
+AC_ARG_WITH(consolekit,
+	 AS_HELP_STRING([--with-consolekit], [Use ConsoleKit in xinit]),
+	[CK="$withval"],
+	[CK="$DEFAULT_CK"])
+if test "x$CK" != xno ; then
+	PKG_CHECK_MODULES(CK, ck-connector,
+		have_conkit=yes,
+		[have_conkit=no; echo no])
+	if test "x$have_conkit" = xyes ; then
+		AC_DEFINE(USE_CONKIT, 1, [Define if you have ConsoleKit])
+		XINIT_CFLAGS="$XINIT_CFLAGS $CK_CFLAGS"
+		XINIT_LIBS="$XINIT_LIBS $CK_LIBS"
+	fi
+fi
+
 AC_PATH_PROGS(MCOOKIE, [mcookie], [$MCOOKIE],
   [$PATH:/bin:/usr/bin:/usr/lib:/usr/libexec:/usr/local/bin])
 if test "x$MCOOKIE" != x ; then
diff --git a/startx.cpp b/startx.cpp
index 42421ef..998c7f8 100644
--- a/startx.cpp
+++ b/startx.cpp
@@ -222,6 +222,12 @@ EOF
     fi
 done
 
+if [ x"$display" != x ]; then
+    export DISPLAY=$display
+else
+    export DISPLAY=:0
+fi
+
 #if defined(__SCO__) || defined(__UNIXWARE__)
 if [ "$REMOTE_SERVER" = "TRUE" ]; then
         exec SHELL_CMD ${client}
--- xinit-1.3.0/xinit.c.orig	2010-10-31 10:39:31.355103290 +0100
+++ xinit-1.3.0/xinit.c	2010-10-31 10:51:48.107104966 +0100
@@ -41,6 +41,12 @@
 #include <setjmp.h>
 #include <stdarg.h>
 
+#ifdef USE_CONKIT
+#include <ck-connector.h>
+#include <X11/Xatom.h>
+static CkConnector *ckc = NULL;
+#endif /* USE_CONKIT */
+
 #ifdef __APPLE__
 #include <AvailabilityMacros.h>
 #if MAC_OS_X_VERSION_MIN_REQUIRED >= 1060
@@ -395,6 +401,38 @@
     return (serverpid != pidfound);
 }
 
+
+#ifdef USE_CONKIT
+static void
+register_new_session_with_console_kit (void)
+{
+	static char conkitbuf[256];
+	DBusError   error;
+
+	ckc = ck_connector_new ();
+	if (ckc == NULL) {
+		Error ("Cannot register with ConsoleKit: OOM creating CkConnector\n");
+		goto out;
+	}
+
+	dbus_error_init (&error);
+	if (!ck_connector_open_session (ckc, &error)) {
+		Error ("Cannot register with ConsoleKit: %s: %s\n", error.name, error.message);
+		goto out;
+	}
+
+	/* If we managed to register with ConsoleKit, put the
+	 * environment variable XDG_SESSION_COOKIE=cookie as second
+	 * element in newenviron. See set_environment() where we
+	 * earlier have made sure there is room...
+	 */
+	if (setenv("XDG_SESSION_COOKIE", ck_connector_get_cookie (ckc), TRUE) == -1)
+	    Fatal("unable to set XDG_SESSION_COOKIE");
+out:
+	;
+}
+#endif /* USE_CONKIT */
+
 static int
 startServer(char *server[])
 {
@@ -568,6 +606,9 @@
     if (clientpid == 0) {
         set_environment();
         setWindowPath();
+#ifdef USE_CONKIT
+	register_new_session_with_console_kit();
+#endif /* USE_CONKIT */
 
         if (setuid(getuid()) == -1) {
             Error("cannot change uid");
@@ -612,6 +653,13 @@
             Error("can't send HUP to process group %d", clientpid);
     }
 
+#ifdef USE_CONKIT
+    if (ckc != NULL) {
+	ck_connector_unref (ckc);
+	ckc = NULL;
+    }
+#endif
+
     if (serverpid < 0)
         return;
 
